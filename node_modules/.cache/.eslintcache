[{"/Users/jianlan/Documents/GitHub/site/src/index.js":"1","/Users/jianlan/Documents/GitHub/site/src/serviceWorker.js":"2","/Users/jianlan/Documents/GitHub/site/src/components/App.js":"3","/Users/jianlan/Documents/GitHub/site/src/context/UserContext.js":"4","/Users/jianlan/Documents/GitHub/site/src/context/LayoutContext.js":"5","/Users/jianlan/Documents/GitHub/site/src/themes/index.js":"6","/Users/jianlan/Documents/GitHub/site/src/themes/default.js":"7","/Users/jianlan/Documents/GitHub/site/src/components/Layout/Layout.js":"8","/Users/jianlan/Documents/GitHub/site/src/pages/error/Error.js":"9","/Users/jianlan/Documents/GitHub/site/src/pages/login/Login.js":"10","/Users/jianlan/Documents/GitHub/site/src/pages/login/styles.js":"11","/Users/jianlan/Documents/GitHub/site/src/pages/error/styles.js":"12","/Users/jianlan/Documents/GitHub/site/src/components/Layout/styles.js":"13","/Users/jianlan/Documents/GitHub/site/src/pages/charts/Charts.js":"14","/Users/jianlan/Documents/GitHub/site/src/pages/icons/Icons.js":"15","/Users/jianlan/Documents/GitHub/site/src/pages/tables/Tables.js":"16","/Users/jianlan/Documents/GitHub/site/src/pages/maps/Maps.js":"17","/Users/jianlan/Documents/GitHub/site/src/pages/notifications/Notifications.js":"18","/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/Sidebar.js":"19","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/Dashboard.js":"20","/Users/jianlan/Documents/GitHub/site/src/pages/typography/Typography.js":"21","/Users/jianlan/Documents/GitHub/site/src/components/Header/Header.js":"22","/Users/jianlan/Documents/GitHub/site/src/pages/notifications/styles.js":"23","/Users/jianlan/Documents/GitHub/site/src/pages/typography/styles.js":"24","/Users/jianlan/Documents/GitHub/site/src/pages/charts/components/ApexLineChart.js":"25","/Users/jianlan/Documents/GitHub/site/src/pages/charts/components/ApexHeatmap.js":"26","/Users/jianlan/Documents/GitHub/site/src/components/Header/styles.js":"27","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/styles.js":"28","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/mock.js":"29","/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/components/Dot.js":"30","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/BigStat/BigStat.js":"31","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/Table/Table.js":"32","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/Map/MapChart.js":"33","/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/components/SidebarLink/SidebarLink.js":"34","/Users/jianlan/Documents/GitHub/site/src/components/Notification/Notification.js":"35","/Users/jianlan/Documents/GitHub/site/src/components/Widget/Widget.js":"36","/Users/jianlan/Documents/GitHub/site/src/components/PageTitle/PageTitle.js":"37","/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/styles.js":"38","/Users/jianlan/Documents/GitHub/site/src/components/Wrappers/Wrappers.js":"39","/Users/jianlan/Documents/GitHub/site/src/components/UserAvatar/UserAvatar.js":"40","/Users/jianlan/Documents/GitHub/site/src/pages/maps/styles.js":"41","/Users/jianlan/Documents/GitHub/site/src/pages/icons/styles.js":"42","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/BigStat/styles.js":"43","/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/components/SidebarLink/styles.js":"44","/Users/jianlan/Documents/GitHub/site/src/components/Notification/styles.js":"45","/Users/jianlan/Documents/GitHub/site/src/components/Widget/styles.js":"46","/Users/jianlan/Documents/GitHub/site/src/components/PageTitle/styles.js":"47","/Users/jianlan/Documents/GitHub/site/src/components/UserAvatar/styles.js":"48"},{"size":869,"mtime":1631330836976,"results":"49","hashOfConfig":"50"},{"size":4948,"mtime":1631330836998,"results":"51","hashOfConfig":"50"},{"size":1705,"mtime":1631853550536,"results":"52","hashOfConfig":"50"},{"size":2768,"mtime":1631858268327,"results":"53","hashOfConfig":"50"},{"size":1392,"mtime":1631330836972,"results":"54","hashOfConfig":"50"},{"size":502,"mtime":1631330837050,"results":"55","hashOfConfig":"50"},{"size":2987,"mtime":1631330837050,"results":"56","hashOfConfig":"50"},{"size":2947,"mtime":1631330836991,"results":"57","hashOfConfig":"50"},{"size":1571,"mtime":1631330837040,"results":"58","hashOfConfig":"50"},{"size":7909,"mtime":1631858440336,"results":"59","hashOfConfig":"50"},{"size":3133,"mtime":1631330837048,"results":"60","hashOfConfig":"50"},{"size":1334,"mtime":1631330837042,"results":"61","hashOfConfig":"50"},{"size":680,"mtime":1631330836992,"results":"62","hashOfConfig":"50"},{"size":5556,"mtime":1631330837005,"results":"63","hashOfConfig":"50"},{"size":1829,"mtime":1631330837035,"results":"64","hashOfConfig":"50"},{"size":4227,"mtime":1631330837004,"results":"65","hashOfConfig":"50"},{"size":971,"mtime":1631330837000,"results":"66","hashOfConfig":"50"},{"size":3938,"mtime":1631330837045,"results":"67","hashOfConfig":"50"},{"size":3308,"mtime":1631330836978,"results":"68","hashOfConfig":"50"},{"size":12919,"mtime":1631330837033,"results":"69","hashOfConfig":"50"},{"size":7451,"mtime":1631330837037,"results":"70","hashOfConfig":"50"},{"size":8788,"mtime":1631330836996,"results":"71","hashOfConfig":"50"},{"size":1858,"mtime":1631330837045,"results":"72","hashOfConfig":"50"},{"size":374,"mtime":1631330837039,"results":"73","hashOfConfig":"50"},{"size":1328,"mtime":1631330837006,"results":"74","hashOfConfig":"50"},{"size":1794,"mtime":1631330837007,"results":"75","hashOfConfig":"50"},{"size":3868,"mtime":1631330836997,"results":"76","hashOfConfig":"50"},{"size":2870,"mtime":1631330837034,"results":"77","hashOfConfig":"50"},{"size":4105,"mtime":1631330837032,"results":"78","hashOfConfig":"50"},{"size":862,"mtime":1631330836981,"results":"79","hashOfConfig":"50"},{"size":4039,"mtime":1631330837013,"results":"80","hashOfConfig":"50"},{"size":1273,"mtime":1631330837012,"results":"81","hashOfConfig":"50"},{"size":2060,"mtime":1631330837010,"results":"82","hashOfConfig":"50"},{"size":4411,"mtime":1631330836980,"results":"83","hashOfConfig":"50"},{"size":3296,"mtime":1631330836989,"results":"84","hashOfConfig":"50"},{"size":2485,"mtime":1631330836987,"results":"85","hashOfConfig":"50"},{"size":427,"mtime":1631330836985,"results":"86","hashOfConfig":"50"},{"size":1304,"mtime":1631330836982,"results":"87","hashOfConfig":"50"},{"size":3790,"mtime":1631330836983,"results":"88","hashOfConfig":"50"},{"size":593,"mtime":1631330836995,"results":"89","hashOfConfig":"50"},{"size":171,"mtime":1631330837001,"results":"90","hashOfConfig":"50"},{"size":780,"mtime":1631330837036,"results":"91","hashOfConfig":"50"},{"size":1027,"mtime":1631330837013,"results":"92","hashOfConfig":"50"},{"size":1412,"mtime":1631330836980,"results":"93","hashOfConfig":"50"},{"size":993,"mtime":1631330836990,"results":"94","hashOfConfig":"50"},{"size":969,"mtime":1631330836988,"results":"95","hashOfConfig":"50"},{"size":462,"mtime":1631330836985,"results":"96","hashOfConfig":"50"},{"size":276,"mtime":1631330836994,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"8qsqyu",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"100"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"100"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"/Users/jianlan/Documents/GitHub/site/src/index.js",[],["203","204"],"/Users/jianlan/Documents/GitHub/site/src/serviceWorker.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/App.js",[],"/Users/jianlan/Documents/GitHub/site/src/context/UserContext.js",["205","206","207","208"],"/Users/jianlan/Documents/GitHub/site/src/context/LayoutContext.js",[],"/Users/jianlan/Documents/GitHub/site/src/themes/index.js",[],"/Users/jianlan/Documents/GitHub/site/src/themes/default.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Layout/Layout.js",["209","210","211","212","213"],"import React from \"react\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport {Box, IconButton, Link} from '@material-ui/core'\nimport Icon from '@mdi/react'\n\n//icons\nimport {\n  mdiFacebook as FacebookIcon,\n  mdiTwitter as TwitterIcon,\n  mdiGithub as GithubIcon,\n} from '@mdi/js'\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport Header from \"../Header\";\nimport Sidebar from \"../Sidebar\";\n\n// pages\nimport Dashboard from \"../../pages/dashboard\";\nimport Typography from \"../../pages/typography\";\nimport Notifications from \"../../pages/notifications\";\nimport Maps from \"../../pages/maps\";\nimport Tables from \"../../pages/tables\";\nimport Icons from \"../../pages/icons\";\nimport Charts from \"../../pages/charts\";\n\n// context\nimport { useLayoutState } from \"../../context/LayoutContext\";\n\nfunction Layout(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n\n  return (\n    <div className={classes.root}>\n        <>\n          <Header history={props.history} />\n          <Sidebar />\n          <div\n            className={classnames(classes.content, {\n              [classes.contentShift]: layoutState.isSidebarOpened,\n            })}\n          >\n            <div className={classes.fakeToolbar} />\n            <Switch>\n              <Route path=\"/app/dashboard\" component={Dashboard} />\n              <Route path=\"/app/typography\" component={Typography} />\n              <Route path=\"/app/tables\" component={Tables} />\n              <Route path=\"/app/notifications\" component={Notifications} />\n              <Route\n                exact\n                path=\"/app/ui\"\n                render={() => <Redirect to=\"/app/ui/icons\" />}\n              />\n              <Route path=\"/app/ui/maps\" component={Maps} />\n              <Route path=\"/app/ui/icons\" component={Icons} />\n              <Route path=\"/app/ui/charts\" component={Charts} />\n            </Switch>\n            <Box\n              mt={5}\n              width={\"100%\"}\n              display={\"flex\"}\n              alignItems={\"center\"}\n              justifyContent=\"space-between\"\n            >\n              <div>\n                <Link\n                  color={'primary'}\n                  href={'https://gmail.com'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  For support and feedback, please contact: jingsong.cui@bayer.com\n                </Link>\n                <Link\n                  color={'primary'}\n                  href={'http://ec2-54-162-132-154.compute-1.amazonaws.com:8972/'}\n                  target={'_blank'}\n                  className={classes.link}\n                >\n                  Old Version\n                </Link>\n                \n              </div>\n              \n            </Box>\n          </div>\n        </>\n    </div>\n  );\n}\n\nexport default withRouter(Layout);\n","/Users/jianlan/Documents/GitHub/site/src/pages/error/Error.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/login/Login.js",["214","215","216","217"],"/Users/jianlan/Documents/GitHub/site/src/pages/login/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/error/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Layout/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/charts/Charts.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/icons/Icons.js",["218","219","220","221","222","223","224"],"import React, { useState } from \"react\";\nimport {\n  Typography,\n  Grid,\n  Tabs,\n  Tab,\n  Paper,\n  Menu,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Widget from \"../../components/Widget\";\n\n// icons sets\nimport \"font-awesome/css/font-awesome.min.css\";\n\nexport default function IconsPage () {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  var classes = useStyles();\n\n  // local\n  var [activeTabId, setActiveTabId] = useState(0);\n\n  return (\n  <>\n    <PageTitle title=\"Kidney Testing\" button={(\n      <>\n        <Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n      onClick={e => handleClick(e)}\n    >\n      Download Results\n    </Button>\n        <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n      <MenuItem onClick={handleClose}><Icons.Print style={{marginRight: 16}}/> Print PDF</MenuItem>\n      <MenuItem onClick={handleClose}><Icons.GetApp style={{marginRight: 16}}/> Download</MenuItem>\n      <MenuItem onClick={handleClose}><Icons.Email style={{marginRight: 16}}/>Send by mail</MenuItem>\n          <MenuItem onClick={handleClose}><Icons.Share style={{marginRight: 16}}/>Share</MenuItem>\n    </Menu>\n      </>\n    )} />\n    <Grid container spacing={4}>\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu\n        title=\"Introduction\">\n          <Grid container item xs={12}>\n          <p>Coming...</p>\n          </Grid>\n          </Widget>\n        </Grid>\n      </Grid>\n  </>\n);}\n","/Users/jianlan/Documents/GitHub/site/src/pages/tables/Tables.js",["225","226","227","228"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport MUIDataTable from \"mui-datatables\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport Table from \"../dashboard/components/Table/Table\";\n\n// data\nimport mock from \"../dashboard/mock\";\nimport flow from \"./flow.jpeg\";\n\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  }\n}))\n\nexport default function Tables() {\n  const classes = useStyles();\n  return (\n    <>\n      <PageTitle title=\"Welcome\" />\n      <Grid container spacing={4}>\n        \n        <Grid item xs={12}>\n        <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n\n          <h1>Introduction</h1>\n          <p>The CKD Population Navigator is a data visualization and analytics tool based upon the results of a retrospective, cross-sectional analysis of the Optum Administrative claims database to describe the Chronic Kidney Disease and Type 2 Diabetes patient landscape within the database in the year 2019.</p>\n            \n          <p>The tool allows users to explore the following characteristics in the type 2 diabetes (T2D), chronic kidney disease (CKD), and CKD and T2D populations: demographic, clinical (i.e., events, comorbidities), medication use, and kidney labs.</p>\n          </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          <h1>Objective</h1>\n          <p>Understand the demographic and clinical characteristics of individuals with Type II Diabetes(T2D), Chronic Kidney Disease (CKD), and CKD w/ T2D within a commercial/medicare advantage claims database.</p>\n          \n          <div>\n          <h2>Patient Selection</h2>\n            <li>Cohort: T2D without CKD</li>\n            <ul>\n            <li>Inclusion: At least 1 diagnosis code for T2D in 2019</li>\n            <li>Exclusion: less than 18 years of age; diagnosis of CKD in 2019</li>\n            </ul>\n            <li>Cohort: CKD without T2D</li>\n            <ul>\n            <li>Inclusion: At least 1 diagnosis code for CKD in 2019</li>\n            <li>Exclusion: less than 18 years of age; diagnosis of T2D in 2019</li>\n            </ul>\n            <li>Cohort: CKD and T2D</li>\n            <ul>\n            <li>Inclusion: At least 1 diagnosis code for CKD and 1 diagnosis code for T2D in 2019</li>\n            <li>Exclusion: less than 18 years of age </li>\n            </ul>\n            Note: Continuous eligibility was not a requirement for any cohort.\n          </div>\n\n          </Grid>\n          <Grid container item xs={12}>\n          <div>\n          <h2>Study Design</h2>\n          \n          Study design: Cross-sectional analysis<br/>\n          Study period: 1 January 2019 – 31 December 2019<br/>\n          Data source: Optum administrative claims<br/>\n          <p>All analyses are descriptive in nature and displayed using tables and figures. Descriptive analyses of the data were performed using summary statistics. Measures including clinical events, comorbidities, provider types, and medication use are reported as the number and percentage of patients in a cohort who had a particular demographic or clinical characteristic, or had visited a provider specialty of interest.</p>\n          </div>\n          <img src={flow} alt=\"Flow\" />;\n          </Grid>\n          </Widget>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <Widget disableWidgetMenu>\n          <Grid container item xs={12}>\n          \n          <div>\n          <h3>More information about Optum administrative claims dataset </h3>\n          Optum Administrative Claims Data\n          <li>Data from January 2007 to present</li>\n          <li>Health plan-based</li>\n          <li>Includes between 12.4 to 14 million unique commercial members each year</li>\n          <li>~3.5 million Medicare enrollment in 2015 with steady growth</li>\n          <li>Represents ~25% of Medicare Advantage enrollment in the United States</li>\n          \n          </div>\n          </Grid>\n          </Widget>\n        </Grid>\n\n      </Grid>\n    </>\n  );\n}\n","/Users/jianlan/Documents/GitHub/site/src/pages/maps/Maps.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/notifications/Notifications.js",["229","230","231","232","233","234","235","236","237"],"import React, { useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport classnames from \"classnames\";\n\n// styles\nimport \"react-toastify/dist/ReactToastify.css\";\nimport useStyles from \"./styles\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport Notification from \"../../components/Notification\";\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\n\nconst positions = [\n  toast.POSITION.TOP_LEFT,\n  toast.POSITION.TOP_CENTER,\n  toast.POSITION.TOP_RIGHT,\n  toast.POSITION.BOTTOM_LEFT,\n  toast.POSITION.BOTTOM_CENTER,\n  toast.POSITION.BOTTOM_RIGHT,\n];\n\nexport default function NotificationsPage(props) {\n  var classes = useStyles();\n\n  // local\n  var [notificationsPosition, setNotificationPosition] = useState(2);\n  var [errorToastId, setErrorToastId] = useState(null);\n\n  return (\n    <>\n      <PageTitle title=\"State Infographics\" />\n      <Grid container spacing={4}>\n        \n        <Grid item xs={12}>\n        <Widget disableWidgetMenu\n        title=\"Introduction\">\n          <Grid container item xs={12}>\n          <p>Please select a state or territory in the drop-down menu below and click “Create infographic” to generate a 1-page infographic describing its respective CKD and T2D cohorts. The infographic is specific to a single state or territory and can be downloaded as an image file and saved for later use.</p>\n            \n          </Grid>\n          </Widget>\n        </Grid>\n        \n      </Grid>\n    </>\n  );\n\n  // #############################################################\n  function sendNotification(componentProps, options) {\n    return toast(\n      <Notification\n        {...componentProps}\n        className={classes.notificationComponent}\n      />,\n      options,\n    );\n  }\n\n  function retryErrorNotification() {\n    var componentProps = {\n      type: \"message\",\n      message: \"Message was sent successfully!\",\n      variant: \"contained\",\n      color: \"success\",\n    };\n    toast.update(errorToastId, {\n      render: <Notification {...componentProps} />,\n      type: \"success\",\n    });\n    setErrorToastId(null);\n  }\n\n  function handleNotificationCall(notificationType) {\n    var componentProps;\n\n    if (errorToastId && notificationType === \"error\") return;\n\n    switch (notificationType) {\n      case \"info\":\n        componentProps = {\n          type: \"feedback\",\n          message: \"New user feedback received\",\n          variant: \"contained\",\n          color: \"primary\",\n        };\n        break;\n      case \"error\":\n        componentProps = {\n          type: \"message\",\n          message: \"Message was not sent!\",\n          variant: \"contained\",\n          color: \"secondary\",\n          extraButton: \"Resend\",\n          extraButtonClick: retryErrorNotification,\n        };\n        break;\n      default:\n        componentProps = {\n          type: \"shipped\",\n          message: \"The item was shipped\",\n          variant: \"contained\",\n          color: \"success\",\n        };\n    }\n\n    var toastId = sendNotification(componentProps, {\n      type: notificationType,\n      position: positions[notificationsPosition],\n      progressClassName: classes.progress,\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\n      className: classes.notification,\n    });\n\n    if (notificationType === \"error\") setErrorToastId(toastId);\n  }\n\n  function changeNotificationPosition(positionId) {\n    setNotificationPosition(positionId);\n  }\n}\n\n// #############################################################\nfunction CloseButton({ closeToast, className }) {\n  return <CloseIcon className={className} onClick={closeToast} />;\n}\n","/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/Sidebar.js",["238","239","240","241"],"import React, { useState, useEffect } from \"react\";\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\nimport {\n  Home as HomeIcon,\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  QuestionAnswer as SupportIcon,\n  LibraryBooks as LibraryIcon,\n  HelpOutline as FAQIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\nimport Dot from \"./components/Dot\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\n\nconst structure = [\n  { id: 15, label: 'Welcome', link: '/app/tables', icon: <HomeIcon /> },\n  { id: 0, label: \"Overview\", link: \"/app/dashboard\", icon: <UIElementsIcon /> },\n  {\n    id: 1,\n    label: \"Patient Finder\",\n    link: \"/app/typography\",\n    icon: <TableIcon />,\n  },\n  { id: 2, label: \"State Info\", link: \"/app/notifications\", icon: <LibraryIcon /> },\n  {\n    id: 4,\n    label: \"Kidney Testing\",\n    link: \"/app/ui\",\n    icon: <SupportIcon />,\n  },\n];\n\nfunction Sidebar({ location }) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // global\n  var { isSidebarOpened } = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n\n  // local\n  var [isPermanent, setPermanent] = useState(true);\n\n  useEffect(function() {\n    window.addEventListener(\"resize\", handleWindowWidthChange);\n    handleWindowWidthChange();\n    return function cleanup() {\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\n    };\n  });\n\n  return (\n    <Drawer\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\n      className={classNames(classes.drawer, {\n        [classes.drawerOpen]: isSidebarOpened,\n        [classes.drawerClose]: !isSidebarOpened,\n      })}\n      classes={{\n        paper: classNames({\n          [classes.drawerOpen]: isSidebarOpened,\n          [classes.drawerClose]: !isSidebarOpened,\n        }),\n      }}\n      open={isSidebarOpened}\n    >\n      <div className={classes.toolbar} />\n      <div className={classes.mobileBackButton}>\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\n          <ArrowBackIcon\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n      </div>\n      <List className={classes.sidebarList}>\n        {structure.map(link => (\n          <SidebarLink\n            key={link.id}\n            location={location}\n            isSidebarOpened={isSidebarOpened}\n            {...link}\n          />\n        ))}\n      </List>\n    </Drawer>\n  );\n\n  // ##################################################################\n  function handleWindowWidthChange() {\n    var windowWidth = window.innerWidth;\n    var breakpointWidth = theme.breakpoints.values.md;\n    var isSmallScreen = windowWidth < breakpointWidth;\n\n    if (isSmallScreen && isPermanent) {\n      setPermanent(false);\n    } else if (!isSmallScreen && !isPermanent) {\n      setPermanent(true);\n    }\n  }\n}\n\nexport default withRouter(Sidebar);\n","/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/Dashboard.js",["242","243","244","245","246","247","248","249","250","251","252","253","254"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  Menu,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport * as Icons from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n  Tooltip,\n  Legend\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n// import \"./components/Map/styles.css\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\nimport MapChart from \"./components/Map/MapChart\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Both CKD and T2D\", value: 0.237, color: \"primary\" },\n  { name: \"CKD only\", value: 0.202, color: \"secondary\" },\n  { name: \"T2D only\", value: 0.561, color: \"warning\" },\n];\nconst PieChartData2 = [\n  { name: \"Both CKD and T2D\", value: 0.11, color: \"primary\" },\n  { name: \"CKD only\", value: 0.108, color: \"secondary\" },\n  { name: \"T2D only\", value: 0.781, color: \"warning\" },\n];\nconst PieChartData3 = [\n  { name: \"Both CKD and T2D\", value: 0.277, color: \"primary\" },\n  { name: \"CKD only\", value: 0.232, color: \"secondary\" },\n  { name: \"T2D only\", value: 0.49, color: \"warning\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  var classes = useStyles();\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n  \n\n  return (\n    <>\n      <PageTitle title=\"Population Overview\" button={(\n        <>\n        <Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n      onClick={e => handleClick(e)}\n    >\n        Download Results\n    </Button>\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={handleClose}\n    >\n      <MenuItem onClick={handleClose}><Icons.Print style={{marginRight: 16}}/> Print PDF</MenuItem>\n      <MenuItem onClick={handleClose}><Icons.GetApp style={{marginRight: 16}}/> Download</MenuItem>\n      <MenuItem onClick={handleClose}><Icons.Email style={{marginRight: 16}}/>Send by mail</MenuItem>\n          <MenuItem onClick={handleClose}><Icons.Share style={{marginRight: 16}}/>Share</MenuItem>\n    </Menu>\n    </>\n    )} />\n\n\n\n      <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Widget disableWidgetMenu\n        title=\"Introduction\">\n          <Grid container item xs={12}>\n          <p>This page provides an overview of the total patient population (N=2,840,880) who met the pre-specified cohort criteria for inclusion in this cross-sectional analysis. The figures below provide a visual depiction of the total patient population by cohort, state, year of birth, race, and payor type. Please hover your cursor above a specific data point to view specific information in the corresponding pop-up window.</p>\n            \n          </Grid>\n          </Widget>\n        </Grid>\n        \n        <Grid item lg={4} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"All Above\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            \n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={5}>\n                Adult Members:\n              <Typography size=\"md\" noWrap>\n                15,735,808\n              </Typography>\n                Total Patients\n                <Typography size=\"md\">\n                2,840,880\n                </Typography>\n                Insured Lives\n                <Typography size=\"md\">\n                18.1%\n                </Typography>\n                </Grid>\n\n              <Grid item xs={7}>\n\n                <ResponsiveContainer width=\"100%\" height={150}>\n                  \n                  <PieChart>\n                    <Pie\n                      isAnimationActive={true}\n                      data={PieChartData}\n                      outerRadius={50}\n                      dataKey=\"value\"\n                      label\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                    <Tooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              \n              </Grid>\n              </Grid>\n          </Widget>\n        </Grid>\n      \n        <Grid item lg={4} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Commercial\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <Grid container item alignItems={\"center\"}>\n                <Grid item xs={5}>\n                Adult Members:\n              <Typography size=\"md\" noWrap>\n                10,097,812\n              </Typography>\n                Total Patients\n                <Typography size=\"md\">\n                687,020\n                </Typography>\n                Insured Lives\n                <Typography size=\"md\">\n                6.8% \n                </Typography>\n                </Grid>\n\n              <Grid item xs={7}>\n\n                <ResponsiveContainer width=\"100%\" height={150}>\n                  \n                  <PieChart>\n                    <Pie\n                      isAnimationActive={true}\n                      data={PieChartData2}\n                      outerRadius={50}\n                      dataKey=\"value\"\n                      label\n                    >\n                      {PieChartData2.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                    <Tooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              \n              </Grid>\n              </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item lg={4} md={4} sm={6} xs={12}>\n          <Widget \n          title=\"Medicare\" \n          upperTitle className={classes.card}>\n            <Grid container item alignItems={\"center\"}>\n                <Grid item xs={5}>\n                Adult Members:\n              <Typography size=\"md\" noWrap>\n                5,637,996\n              </Typography>\n                Total Patients\n                <Typography size=\"md\">\n                2,153,759\n                </Typography>\n                Insured Lives\n                <Typography size=\"md\">\n                38.2%\n                </Typography>\n                </Grid>\n\n              <Grid item xs={7}>\n\n                <ResponsiveContainer width=\"100%\" height={150}>\n                  \n                  <PieChart>\n                    <Pie\n                      isAnimationActive={true}\n                      data={PieChartData3}\n                      outerRadius={50}\n                      dataKey=\"value\"\n                      label\n                    >\n                      {PieChartData3.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                    <Tooltip />\n                  </PieChart>\n                </ResponsiveContainer>\n              \n              </Grid>\n              </Grid>\n          </Widget>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Commercial\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Medicare\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      All above\n                    </Typography>\n                  </div>\n                </div>\n                \n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={true}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={true}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={true}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={true}\n                  activeDot={true}\n                />\n\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n\n                <Line\n                  type=\"linear\"\n                  dataKey=\"desktop\"\n                  stroke={theme.palette.secondary.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.secondary.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.secondary.main,\n                  }}\n                />\n\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Widget\n            title=\"Map\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            coming...\n\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","/Users/jianlan/Documents/GitHub/site/src/pages/typography/Typography.js",["255","256"],"import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\n\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nexport default function TypographyPage() {\n  var classes = useStyles();\n\n  return (\n    <>\n      <PageTitle title=\"Patient Finder\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu\n        title=\"Introduction\">\n          <Grid container item xs={12}>\n          <p>This page allows the user to view a patient subpopulation using customizable filters. Define a patient sub-population by applying filters to define variable(s) of interest.</p>\n          <li>Please select all applicable filters. Availble varibles are: state(s), payor type(s), patient cohort(s), comorbid condition(s), and medication(s) use.</li>\n          <li>If no value is selected for a filter, all possible values of the variable are included.</li> \n          <li>Click the “Apply Selected Filters” to identify your specified target patient subpopulation and to display relevant statistics.</li> \n          <li>A patient attrition figure will display the proportion of the target patients among adult members in Optum in the form of a waterfall analysis.</li>\n          </Grid>\n          </Widget>\n        </Grid>\n\n\n        <Grid item xs={12} md={3}>\n          <Widget disableWidgetMenu\n        title=\"Select Insurance Plans\">\n            \n            <Scrollbars\n                style={{ height: 100 }}>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n\n            </Scrollbars>\n             \n        </Widget>\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <Widget disableWidgetMenu\n        title=\"Select Medical Plans\">\n            \n            <Scrollbars\n                style={{ height: 100 }}>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n\n            </Scrollbars>\n             \n        </Widget>\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <Widget disableWidgetMenu\n        title=\"Select Treatment Plans\">\n            \n            <Scrollbars\n                style={{ height: 100 }}>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n                <label>\n                <input type=\"checkbox\" />\n                test\n                </label><br/>\n\n            </Scrollbars>\n             \n        </Widget>\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <Widget disableWidgetMenu\n        title=\"Selected Filters\">\n            <Scrollbars\n                style={{ height: 100 }}>\n            <p>States = AL</p>\n            <p>Payor Type(s) = Medicare</p>\n            <p>Condition(s) = Atrial Fibrillation AND Acute Kidney Injury</p>\n            <p>Treatment(s) = Insulin AND SGLT2 Inhibitor</p>\n            </Scrollbars>\n        </Widget>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Widget disableWidgetMenu\n        title=\"Results\">\n            plots\n        </Widget>\n        </Grid>\n\n      </Grid>\n    </>\n  );\n}\n","/Users/jianlan/Documents/GitHub/site/src/components/Header/Header.js",["257","258","259","260","261","262","263","264","265"],"import React, { useState } from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  InputBase,\n  Menu,\n  MenuItem,\n  Fab,\n  Link\n} from \"@material-ui/core\";\nimport {\n  Menu as MenuIcon,\n  MailOutline as MailIcon,\n  NotificationsNone as NotificationsIcon,\n  Person as AccountIcon,\n  Search as SearchIcon,\n  Send as SendIcon,\n  ArrowBack as ArrowBackIcon,\n} from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography, Button } from \"../Wrappers\";\nimport Notification from \"../Notification/Notification\";\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\n\n// context\nimport {\n  useLayoutState,\n  useLayoutDispatch,\n  toggleSidebar,\n} from \"../../context/LayoutContext\";\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\n\nconst messages = [\n  {\n    id: 0,\n    variant: \"warning\",\n    name: \"Jane Hew\",\n    message: \"Hey! How is it going?\",\n    time: \"9:32\",\n  },\n  {\n    id: 1,\n    variant: \"success\",\n    name: \"Lloyd Brown\",\n    message: \"Check out my new Dashboard\",\n    time: \"9:18\",\n  },\n  {\n    id: 2,\n    variant: \"primary\",\n    name: \"Mark Winstein\",\n    message: \"I want rearrange the appointment\",\n    time: \"9:15\",\n  },\n  {\n    id: 3,\n    variant: \"secondary\",\n    name: \"Liana Dutti\",\n    message: \"Good news from sale department\",\n    time: \"9:09\",\n  },\n];\n\nconst notifications = [\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\n  {\n    id: 1,\n    color: \"success\",\n    type: \"info\",\n    message: \"What is the best way to get ...\",\n  },\n  {\n    id: 2,\n    color: \"secondary\",\n    type: \"notification\",\n    message: \"This is just a simple notification\",\n  },\n  {\n    id: 3,\n    color: \"primary\",\n    type: \"e-commerce\",\n    message: \"12 new orders has arrived today\",\n  },\n];\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  // global\n  var layoutState = useLayoutState();\n  var layoutDispatch = useLayoutDispatch();\n  var userDispatch = useUserDispatch();\n\n  // local\n  var [mailMenu, setMailMenu] = useState(null);\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\n  var [profileMenu, setProfileMenu] = useState(null);\n  var [isSearchOpen, setSearchOpen] = useState(false);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          onClick={() => toggleSidebar(layoutDispatch)}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          {layoutState.isSidebarOpened ? (\n            <ArrowBackIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          ) : (\n            <MenuIcon\n              classes={{\n                root: classNames(\n                  classes.headerIcon,\n                  classes.headerIconCollapse,\n                ),\n              }}\n            />\n          )}\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\n          CKD Population Navigator\n        </Typography>\n        <div className={classes.grow} />\n        \n        <div\n          className={classNames(classes.search, {\n            [classes.searchFocused]: isSearchOpen,\n          })}\n        >\n          <div\n            className={classNames(classes.searchIcon, {\n              [classes.searchIconOpened]: isSearchOpen,\n            })}\n            onClick={() => setSearchOpen(!isSearchOpen)}\n          >\n            <SearchIcon classes={{ root: classes.headerIcon }} />\n          </div>\n          <InputBase\n            placeholder=\"Search…\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n          />\n        </div>\n\n        <IconButton\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          className={classes.headerMenuButton}\n          aria-controls=\"profile-menu\"\n          onClick={e => setProfileMenu(e.currentTarget)}\n        >\n          <AccountIcon classes={{ root: classes.headerIcon }} />\n        </IconButton>\n        <Menu\n          id=\"mail-menu\"\n          open={Boolean(mailMenu)}\n          anchorEl={mailMenu}\n          onClose={() => setMailMenu(null)}\n          MenuListProps={{ className: classes.headerMenuList }}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              New Messages\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"secondary\"\n            >\n              {messages.length} New Messages\n            </Typography>\n          </div>\n          {messages.map(message => (\n            <MenuItem key={message.id} className={classes.messageNotification}>\n              <div className={classes.messageNotificationSide}>\n                <UserAvatar color={message.variant} name={message.name} />\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\n                  {message.time}\n                </Typography>\n              </div>\n              <div\n                className={classNames(\n                  classes.messageNotificationSide,\n                  classes.messageNotificationBodySide,\n                )}\n              >\n                <Typography weight=\"medium\" gutterBottom>\n                  {message.name}\n                </Typography>\n                <Typography color=\"text\" colorBrightness=\"secondary\">\n                  {message.message}\n                </Typography>\n              </div>\n            </MenuItem>\n          ))}\n          <Fab\n            variant=\"extended\"\n            color=\"primary\"\n            aria-label=\"Add\"\n            className={classes.sendMessageButton}\n          >\n            Send New Message\n            <SendIcon className={classes.sendButtonIcon} />\n          </Fab>\n        </Menu>\n        <Menu\n          id=\"notifications-menu\"\n          open={Boolean(notificationsMenu)}\n          anchorEl={notificationsMenu}\n          onClose={() => setNotificationsMenu(null)}\n          className={classes.headerMenu}\n          disableAutoFocusItem\n        >\n          {notifications.map(notification => (\n            <MenuItem\n              key={notification.id}\n              onClick={() => setNotificationsMenu(null)}\n              className={classes.headerMenuItem}\n            >\n              <Notification {...notification} typographyVariant=\"inherit\" />\n            </MenuItem>\n          ))}\n        </Menu>\n        <Menu\n          id=\"profile-menu\"\n          open={Boolean(profileMenu)}\n          anchorEl={profileMenu}\n          onClose={() => setProfileMenu(null)}\n          className={classes.headerMenu}\n          classes={{ paper: classes.profileMenu }}\n          disableAutoFocusItem\n        >\n          <div className={classes.profileMenuUser}>\n            <Typography variant=\"h4\" weight=\"medium\">\n              Jianlan Ren\n            </Typography>\n            <Typography\n              className={classes.profileMenuLink}\n              component=\"a\"\n              color=\"primary\"\n              // href=\"https://facebook.com\"\n            >\n              xxx@gmail.com\n            </Typography>\n          </div>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n            <AccountIcon className={classes.profileMenuIcon} /> Preferences\n          </MenuItem>\n          <MenuItem\n            className={classNames(\n              classes.profileMenuItem,\n              classes.headerMenuItem,\n            )}\n          >\n          \n          </MenuItem>\n          <div className={classes.profileMenuUser}>\n            <Typography\n              className={classes.profileMenuLink}\n              color=\"primary\"\n              onClick={() => signOut(userDispatch, props.history)}\n            >\n              Sign Out\n            </Typography>\n          </div>\n        </Menu>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/Users/jianlan/Documents/GitHub/site/src/pages/notifications/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/typography/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/charts/components/ApexLineChart.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/charts/components/ApexHeatmap.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Header/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/mock.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/components/Dot.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/BigStat/BigStat.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/Table/Table.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/Map/MapChart.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/components/SidebarLink/SidebarLink.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Notification/Notification.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Widget/Widget.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/PageTitle/PageTitle.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Wrappers/Wrappers.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/UserAvatar/UserAvatar.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/maps/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/icons/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/pages/dashboard/components/BigStat/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Sidebar/components/SidebarLink/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Notification/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/Widget/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/PageTitle/styles.js",[],"/Users/jianlan/Documents/GitHub/site/src/components/UserAvatar/styles.js",[],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":9,"column":7,"nodeType":"272","messageId":"273","endLine":9,"endColumn":13},{"ruleId":"274","severity":1,"message":"275","line":16,"column":24,"nodeType":"276","messageId":"277","endLine":16,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":16,"column":52,"nodeType":"276","messageId":"277","endLine":16,"endColumn":54},{"ruleId":"278","severity":1,"message":"279","line":26,"column":15,"nodeType":"280","messageId":"281","endLine":26,"endColumn":16},{"ruleId":"270","severity":1,"message":"282","line":9,"column":14,"nodeType":"272","messageId":"273","endLine":9,"endColumn":24},{"ruleId":"270","severity":1,"message":"283","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":12},{"ruleId":"270","severity":1,"message":"284","line":14,"column":18,"nodeType":"272","messageId":"273","endLine":14,"endColumn":30},{"ruleId":"270","severity":1,"message":"285","line":15,"column":17,"nodeType":"272","messageId":"273","endLine":15,"endColumn":28},{"ruleId":"270","severity":1,"message":"286","line":16,"column":16,"nodeType":"272","messageId":"273","endLine":16,"endColumn":26},{"ruleId":"270","severity":1,"message":"287","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":19},{"ruleId":"270","severity":1,"message":"288","line":16,"column":8,"nodeType":"272","messageId":"273","endLine":16,"endColumn":18},{"ruleId":"270","severity":1,"message":"289","line":22,"column":8,"nodeType":"272","messageId":"273","endLine":22,"endColumn":12},{"ruleId":"270","severity":1,"message":"290","line":28,"column":7,"nodeType":"272","messageId":"273","endLine":28,"endColumn":11},{"ruleId":"270","severity":1,"message":"291","line":3,"column":3,"nodeType":"272","messageId":"273","endLine":3,"endColumn":13},{"ruleId":"270","severity":1,"message":"292","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":7},{"ruleId":"270","severity":1,"message":"293","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":6},{"ruleId":"270","severity":1,"message":"294","line":7,"column":3,"nodeType":"272","messageId":"273","endLine":7,"endColumn":8},{"ruleId":"270","severity":1,"message":"295","line":35,"column":7,"nodeType":"272","messageId":"273","endLine":35,"endColumn":14},{"ruleId":"270","severity":1,"message":"296","line":38,"column":8,"nodeType":"272","messageId":"273","endLine":38,"endColumn":19},{"ruleId":"270","severity":1,"message":"297","line":38,"column":21,"nodeType":"272","messageId":"273","endLine":38,"endColumn":35},{"ruleId":"270","severity":1,"message":"298","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":20},{"ruleId":"270","severity":1,"message":"299","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":13},{"ruleId":"270","severity":1,"message":"300","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":12},{"ruleId":"270","severity":1,"message":"295","line":22,"column":9,"nodeType":"272","messageId":"273","endLine":22,"endColumn":16},{"ruleId":"270","severity":1,"message":"301","line":4,"column":10,"nodeType":"272","messageId":"273","endLine":4,"endColumn":24},{"ruleId":"270","severity":1,"message":"302","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":25},{"ruleId":"270","severity":1,"message":"303","line":6,"column":10,"nodeType":"272","messageId":"273","endLine":6,"endColumn":15},{"ruleId":"270","severity":1,"message":"288","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":18},{"ruleId":"270","severity":1,"message":"291","line":17,"column":10,"nodeType":"272","messageId":"273","endLine":17,"endColumn":20},{"ruleId":"270","severity":1,"message":"304","line":17,"column":22,"nodeType":"272","messageId":"273","endLine":17,"endColumn":28},{"ruleId":"270","severity":1,"message":"305","line":79,"column":12,"nodeType":"272","messageId":"273","endLine":79,"endColumn":34},{"ruleId":"270","severity":1,"message":"306","line":123,"column":12,"nodeType":"272","messageId":"273","endLine":123,"endColumn":38},{"ruleId":"270","severity":1,"message":"307","line":129,"column":10,"nodeType":"272","messageId":"273","endLine":129,"endColumn":21},{"ruleId":"270","severity":1,"message":"308","line":5,"column":24,"nodeType":"272","messageId":"273","endLine":5,"endColumn":41},{"ruleId":"270","severity":1,"message":"309","line":6,"column":17,"nodeType":"272","messageId":"273","endLine":6,"endColumn":31},{"ruleId":"270","severity":1,"message":"310","line":11,"column":18,"nodeType":"272","messageId":"273","endLine":11,"endColumn":25},{"ruleId":"270","severity":1,"message":"311","line":23,"column":8,"nodeType":"272","messageId":"273","endLine":23,"endColumn":11},{"ruleId":"270","severity":1,"message":"312","line":4,"column":3,"nodeType":"272","messageId":"273","endLine":4,"endColumn":17},{"ruleId":"270","severity":1,"message":"313","line":5,"column":3,"nodeType":"272","messageId":"273","endLine":5,"endColumn":9},{"ruleId":"270","severity":1,"message":"314","line":6,"column":3,"nodeType":"272","messageId":"273","endLine":6,"endColumn":16},{"ruleId":"270","severity":1,"message":"315","line":16,"column":3,"nodeType":"272","messageId":"273","endLine":16,"endColumn":12},{"ruleId":"270","severity":1,"message":"316","line":17,"column":3,"nodeType":"272","messageId":"273","endLine":17,"endColumn":12},{"ruleId":"270","severity":1,"message":"317","line":26,"column":3,"nodeType":"272","messageId":"273","endLine":26,"endColumn":9},{"ruleId":"270","severity":1,"message":"300","line":34,"column":8,"nodeType":"272","messageId":"273","endLine":34,"endColumn":12},{"ruleId":"270","severity":1,"message":"299","line":39,"column":8,"nodeType":"272","messageId":"273","endLine":39,"endColumn":13},{"ruleId":"270","severity":1,"message":"318","line":40,"column":8,"nodeType":"272","messageId":"273","endLine":40,"endColumn":15},{"ruleId":"270","severity":1,"message":"319","line":41,"column":8,"nodeType":"272","messageId":"273","endLine":41,"endColumn":16},{"ruleId":"320","severity":1,"message":"321","line":73,"column":7,"nodeType":"272","messageId":"322","endLine":73,"endColumn":14},{"ruleId":"270","severity":1,"message":"323","line":75,"column":8,"nodeType":"272","messageId":"273","endLine":75,"endColumn":22},{"ruleId":"270","severity":1,"message":"324","line":75,"column":24,"nodeType":"272","messageId":"273","endLine":75,"endColumn":41},{"ruleId":"270","severity":1,"message":"291","line":10,"column":10,"nodeType":"272","messageId":"273","endLine":10,"endColumn":20},{"ruleId":"270","severity":1,"message":"295","line":15,"column":7,"nodeType":"272","messageId":"273","endLine":15,"endColumn":14},{"ruleId":"270","severity":1,"message":"325","line":10,"column":3,"nodeType":"272","messageId":"273","endLine":10,"endColumn":7},{"ruleId":"270","severity":1,"message":"326","line":14,"column":18,"nodeType":"272","messageId":"273","endLine":14,"endColumn":26},{"ruleId":"270","severity":1,"message":"308","line":15,"column":24,"nodeType":"272","messageId":"273","endLine":15,"endColumn":41},{"ruleId":"270","severity":1,"message":"327","line":27,"column":10,"nodeType":"272","messageId":"273","endLine":27,"endColumn":15},{"ruleId":"270","severity":1,"message":"304","line":27,"column":29,"nodeType":"272","messageId":"273","endLine":27,"endColumn":35},{"ruleId":"270","severity":1,"message":"328","line":102,"column":8,"nodeType":"272","messageId":"273","endLine":102,"endColumn":21},{"ruleId":"270","severity":1,"message":"329","line":102,"column":23,"nodeType":"272","messageId":"273","endLine":102,"endColumn":39},{"ruleId":"270","severity":1,"message":"330","line":104,"column":8,"nodeType":"272","messageId":"273","endLine":104,"endColumn":29},{"ruleId":"270","severity":1,"message":"331","line":104,"column":31,"nodeType":"272","messageId":"273","endLine":104,"endColumn":55},"no-native-reassign",["332"],"no-negated-in-lhs",["333"],"no-unused-vars","'server' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'IconButton' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Component' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'data' is assigned a value but never used.","'Typography' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Paper' is defined but never used.","'classes' is assigned a value but never used.","'activeTabId' is assigned a value but never used.","'setActiveTabId' is assigned a value but never used.","'MUIDataTable' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'ToastContainer' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'Button' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'CloseButton' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'LinearProgress' is defined but never used.","'Select' is defined but never used.","'OutlinedInput' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Legend' is defined but never used.","'BigStat' is defined but never used.","'MapChart' is defined but never used.","no-redeclare","'classes' is already defined.","redeclared","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.","'Link' is defined but never used.","'MailIcon' is defined but never used.","'Badge' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]