{"ast":null,"code":"import _slicedToArray from\"/Users/jianlan/Reactide/MyApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/jianlan/Reactide/MyApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var LayoutStateContext=/*#__PURE__*/React.createContext();var LayoutDispatchContext=/*#__PURE__*/React.createContext();function layoutReducer(state,action){switch(action.type){case\"TOGGLE_SIDEBAR\":return _objectSpread(_objectSpread({},state),{},{isSidebarOpened:!state.isSidebarOpened});default:{throw new Error(\"Unhandled action type: \".concat(action.type));}}}function LayoutProvider(_ref){var children=_ref.children;var _React$useReducer=React.useReducer(layoutReducer,{isSidebarOpened:true}),_React$useReducer2=_slicedToArray(_React$useReducer,2),state=_React$useReducer2[0],dispatch=_React$useReducer2[1];return/*#__PURE__*/_jsx(LayoutStateContext.Provider,{value:state,children:/*#__PURE__*/_jsx(LayoutDispatchContext.Provider,{value:dispatch,children:children})});}function useLayoutState(){var context=React.useContext(LayoutStateContext);if(context===undefined){throw new Error(\"useLayoutState must be used within a LayoutProvider\");}return context;}function useLayoutDispatch(){var context=React.useContext(LayoutDispatchContext);if(context===undefined){throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");}return context;}export{LayoutProvider,useLayoutState,useLayoutDispatch,toggleSidebar};// ###########################################################\nfunction toggleSidebar(dispatch){dispatch({type:\"TOGGLE_SIDEBAR\"});}","map":{"version":3,"sources":["/Users/jianlan/Reactide/MyApp/src/context/LayoutContext.js"],"names":["React","LayoutStateContext","createContext","LayoutDispatchContext","layoutReducer","state","action","type","isSidebarOpened","Error","LayoutProvider","children","useReducer","dispatch","useLayoutState","context","useContext","undefined","useLayoutDispatch","toggleSidebar"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAEA,GAAIC,CAAAA,kBAAkB,cAAGD,KAAK,CAACE,aAAN,EAAzB,CACA,GAAIC,CAAAA,qBAAqB,cAAGH,KAAK,CAACE,aAAN,EAA5B,CAEA,QAASE,CAAAA,aAAT,CAAuBC,KAAvB,CAA8BC,MAA9B,CAAsC,CACpC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,gBAAL,CACE,sCAAYF,KAAZ,MAAmBG,eAAe,CAAE,CAACH,KAAK,CAACG,eAA3C,GACF,QAAS,CACP,KAAM,IAAIC,CAAAA,KAAJ,kCAAoCH,MAAM,CAACC,IAA3C,EAAN,CACD,CALH,CAOD,CAED,QAASG,CAAAA,cAAT,MAAsC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,CACpC,sBAAwBX,KAAK,CAACY,UAAN,CAAiBR,aAAjB,CAAgC,CACtDI,eAAe,CAAE,IADqC,CAAhC,CAAxB,wDAAKH,KAAL,uBAAYQ,QAAZ,uBAGA,mBACE,KAAC,kBAAD,CAAoB,QAApB,EAA6B,KAAK,CAAER,KAApC,uBACE,KAAC,qBAAD,CAAuB,QAAvB,EAAgC,KAAK,CAAEQ,QAAvC,UACGF,QADH,EADF,EADF,CAOD,CAED,QAASG,CAAAA,cAAT,EAA0B,CACxB,GAAIC,CAAAA,OAAO,CAAGf,KAAK,CAACgB,UAAN,CAAiBf,kBAAjB,CAAd,CACA,GAAIc,OAAO,GAAKE,SAAhB,CAA2B,CACzB,KAAM,IAAIR,CAAAA,KAAJ,CAAU,qDAAV,CAAN,CACD,CACD,MAAOM,CAAAA,OAAP,CACD,CAED,QAASG,CAAAA,iBAAT,EAA6B,CAC3B,GAAIH,CAAAA,OAAO,CAAGf,KAAK,CAACgB,UAAN,CAAiBb,qBAAjB,CAAd,CACA,GAAIY,OAAO,GAAKE,SAAhB,CAA2B,CACzB,KAAM,IAAIR,CAAAA,KAAJ,CAAU,wDAAV,CAAN,CACD,CACD,MAAOM,CAAAA,OAAP,CACD,CAED,OAASL,cAAT,CAAyBI,cAAzB,CAAyCI,iBAAzC,CAA4DC,aAA5D,EAEA;AACA,QAASA,CAAAA,aAAT,CAAuBN,QAAvB,CAAiC,CAC/BA,QAAQ,CAAC,CACPN,IAAI,CAAE,gBADC,CAAD,CAAR,CAGD","sourcesContent":["import React from \"react\";\n\nvar LayoutStateContext = React.createContext();\nvar LayoutDispatchContext = React.createContext();\n\nfunction layoutReducer(state, action) {\n  switch (action.type) {\n    case \"TOGGLE_SIDEBAR\":\n      return { ...state, isSidebarOpened: !state.isSidebarOpened };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\nfunction LayoutProvider({ children }) {\n  var [state, dispatch] = React.useReducer(layoutReducer, {\n    isSidebarOpened: true,\n  });\n  return (\n    <LayoutStateContext.Provider value={state}>\n      <LayoutDispatchContext.Provider value={dispatch}>\n        {children}\n      </LayoutDispatchContext.Provider>\n    </LayoutStateContext.Provider>\n  );\n}\n\nfunction useLayoutState() {\n  var context = React.useContext(LayoutStateContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutState must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nfunction useLayoutDispatch() {\n  var context = React.useContext(LayoutDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useLayoutDispatch must be used within a LayoutProvider\");\n  }\n  return context;\n}\n\nexport { LayoutProvider, useLayoutState, useLayoutDispatch, toggleSidebar };\n\n// ###########################################################\nfunction toggleSidebar(dispatch) {\n  dispatch({\n    type: \"TOGGLE_SIDEBAR\",\n  });\n}\n"]},"metadata":{},"sourceType":"module"}