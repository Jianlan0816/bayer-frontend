{"ast":null,"code":"var _jsxFileName = \"/Users/jianlan/Reactide/MyApp/src/pages/typography/Typography.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\"; // styles\n\nimport useStyles from \"./styles\"; // components\n\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TypographyPage() {\n  _s();\n\n  var classes = useStyles();\n  const styles = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageTitle, {\n      title: \"Patient Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          disableWidgetMenu: true,\n          title: \"Introduction\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This page allows the user to view a patient subpopulation using customizable filters. Define a patient sub-population by applying filters to define variable(s) of interest.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Please select all applicable filters. Availble varibles are: state(s), payor type(s), patient cohort(s), comorbid condition(s), and medication(s) use.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"If no value is selected for a filter, all possible values of the variable are included.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Click the \\u201CApply Selected Filters\\u201D to identify your specified target patient subpopulation and to display relevant statistics.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"A patient attrition figure will display the proportion of the target patients among adult members in Optum in the form of a waterfall analysis.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Widget, {\n          disableWidgetMenu: true,\n          title: \"Filters\",\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            style: {\n              maxHeight: 350\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              className: styles.table,\n              size: \"small\",\n              stickyHeader: true,\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    className: styles.header,\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: allSelected,\n                      onClick: handleSelectAll,\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 52,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: styles.header,\n                    align: \"left\",\n                    children: \"Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 11\n                  }, this), props.showAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                    className: styles.header,\n                    children: \"Admin\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 9\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: props.employees.map(empl => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: isSelected(empl.id),\n                      onClick: () => handleSelect(empl.id),\n                      className: styles.checkBox,\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    style: {\n                      paddingRight: 30\n                    },\n                    children: empl.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 13\n                  }, this), props.showAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      disabled: true,\n                      checked: empl.isAdmin,\n                      className: styles.checkBox\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 33\n                  }, this)]\n                }, empl.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 11\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TypographyPage, \"aW2C6B7S8LANaD2Y0TIwLEepMNs=\", false, function () {\n  return [useStyles, useStyles];\n});\n\n_c = TypographyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypographyPage\");","map":{"version":3,"sources":["/Users/jianlan/Reactide/MyApp/src/pages/typography/Typography.js"],"names":["React","Grid","useStyles","PageTitle","Widget","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Checkbox","makeStyles","createStyles","Theme","TypographyPage","classes","styles","maxHeight","table","header","allSelected","handleSelectAll","props","showAdmin","employees","map","empl","isSelected","id","handleSelect","checkBox","paddingRight","name","isAdmin"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport PageTitle from \"../../components/PageTitle\";\nimport Widget from \"../../components/Widget\";\nimport { Typography } from \"../../components/Wrappers\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\n\nexport default function TypographyPage() {\n  var classes = useStyles();\n  const styles = useStyles();\n  return (\n    <>\n      <PageTitle title=\"Patient Finder\" />\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n        <Widget disableWidgetMenu\n        title=\"Introduction\">\n          <Grid container item xs={12}>\n          <p>This page allows the user to view a patient subpopulation using customizable filters. Define a patient sub-population by applying filters to define variable(s) of interest.</p>\n          <li>Please select all applicable filters. Availble varibles are: state(s), payor type(s), patient cohort(s), comorbid condition(s), and medication(s) use.</li>\n          <li>If no value is selected for a filter, all possible values of the variable are included.</li> \n          <li>Click the “Apply Selected Filters” to identify your specified target patient subpopulation and to display relevant statistics.</li> \n          <li>A patient attrition figure will display the proportion of the target patients among adult members in Optum in the form of a waterfall analysis.</li>\n          </Grid>\n          </Widget>\n        </Grid>\n\n\n        <Grid item xs={12} md={6}>\n          <Widget disableWidgetMenu\n          title=\"Filters\">\n\n          <TableContainer component={Paper} style={{maxHeight: 350}}>\n    <Table className={styles.table} size=\"small\" stickyHeader>\n      <TableHead>\n        <TableRow >\n          <TableCell className={styles.header}>\n            <Checkbox checked={allSelected} onClick={handleSelectAll} color=\"primary\"/>\n          </TableCell>\n          <TableCell className={styles.header} align=\"left\">Name</TableCell>\n          {props.showAdmin && <TableCell className={styles.header}>Admin</TableCell>}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {props.employees.map(empl => (\n          <TableRow key={empl.id}>\n            <TableCell>\n              <Checkbox checked={isSelected(empl.id)} onClick={() =>handleSelect(empl.id)} className={styles.checkBox} color=\"primary\"/>\n            </TableCell>\n            <TableCell component=\"th\" scope=\"row\" style={{paddingRight: 30}}>{empl.name}</TableCell>\n            {props.showAdmin && <TableCell align=\"center\"><Checkbox disabled checked={empl.isAdmin} className={styles.checkBox}/></TableCell>}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}