{"ast":null,"code":"'use strict';\n\nvar refractorJava = require('./java.js');\n\nmodule.exports = scala;\nscala.displayName = 'scala';\nscala.aliases = [];\n\nfunction scala(Prism) {\n  Prism.register(refractorJava);\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number: /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin: /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  });\n  delete Prism.languages.scala['class-name'];\n  delete Prism.languages.scala['function'];\n}","map":{"version":3,"sources":["/Users/jianlan/Documents/GitHub/site/node_modules/refractor/lang/scala.js"],"names":["refractorJava","require","module","exports","scala","displayName","aliases","Prism","register","languages","extend","pattern","greedy","alias","string","keyword","number","builtin","symbol"],"mappings":"AAAA;;AACA,IAAIA,aAAa,GAAGC,OAAO,CAAC,WAAD,CAA3B;;AACAC,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpBA,EAAAA,KAAK,CAACC,QAAN,CAAeR,aAAf;AACAO,EAAAA,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,MAAvB,EAA+B;AACrD,4BAAwB;AACtBC,MAAAA,OAAO,EAAE,gBADa;AAEtBC,MAAAA,MAAM,EAAE,IAFc;AAGtBC,MAAAA,KAAK,EAAE;AAHe,KAD6B;AAMrDC,IAAAA,MAAM,EAAE;AACNH,MAAAA,OAAO,EAAE,iCADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAN6C;AAUrDG,IAAAA,OAAO,EACL,oPAXmD;AAYrDC,IAAAA,MAAM,EACJ,yEAbmD;AAcrDC,IAAAA,OAAO,EACL,6FAfmD;AAgBrDC,IAAAA,MAAM,EAAE;AAhB6C,GAA/B,CAAxB;AAkBA,SAAOX,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,YAAtB,CAAP;AACA,SAAOG,KAAK,CAACE,SAAN,CAAgBL,KAAhB,CAAsB,UAAtB,CAAP;AACD","sourcesContent":["'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n"]},"metadata":{},"sourceType":"script"}