{"ast":null,"code":"'use strict';\n\nmodule.exports = nginx;\nnginx.displayName = 'nginx';\nnginx.aliases = [];\n\nfunction nginx(Prism) {\n  ;\n\n  (function (Prism) {\n    var variable = /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i;\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true\n      },\n      directive: {\n        pattern: /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    };\n  })(Prism);\n}","map":{"version":3,"sources":["/Users/jianlan/Documents/GitHub/site/node_modules/refractor/lang/nginx.js"],"names":["module","exports","nginx","displayName","aliases","Prism","variable","languages","comment","pattern","lookbehind","directive","greedy","inside","string","escape","alias","keyword","boolean","number","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpB;;AAAC,GAAC,UAAUA,KAAV,EAAiB;AACjB,QAAIC,QAAQ,GACV,+DADF;AAEAD,IAAAA,KAAK,CAACE,SAAN,CAAgBL,KAAhB,GAAwB;AACtBM,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAE,gBADF;AAEPC,QAAAA,UAAU,EAAE;AAFL,OADa;AAKtBC,MAAAA,SAAS,EAAE;AACTF,QAAAA,OAAO,EACL,yGAFO;AAGTC,QAAAA,UAAU,EAAE,IAHH;AAITE,QAAAA,MAAM,EAAE,IAJC;AAKTC,QAAAA,MAAM,EAAE;AACNC,UAAAA,MAAM,EAAE;AACNL,YAAAA,OAAO,EACL,+DAFI;AAGNC,YAAAA,UAAU,EAAE,IAHN;AAING,YAAAA,MAAM,EAAE;AACNE,cAAAA,MAAM,EAAE;AACNN,gBAAAA,OAAO,EAAE,aADH;AAENO,gBAAAA,KAAK,EAAE;AAFD,eADF;AAKNV,cAAAA,QAAQ,EAAEA;AALJ;AAJF,WADF;AAaNE,UAAAA,OAAO,EAAE;AACPC,YAAAA,OAAO,EAAE,SADF;AAEPC,YAAAA,UAAU,EAAE,IAFL;AAGPE,YAAAA,MAAM,EAAE;AAHD,WAbH;AAkBNK,UAAAA,OAAO,EAAE;AACPR,YAAAA,OAAO,EAAE,MADF;AAEPG,YAAAA,MAAM,EAAE;AAFD,WAlBH;AAsBN;AACAM,UAAAA,OAAO,EAAE;AACPT,YAAAA,OAAO,EAAE,sBADF;AAEPC,YAAAA,UAAU,EAAE;AAFL,WAvBH;AA2BNS,UAAAA,MAAM,EAAE;AACNV,YAAAA,OAAO,EAAE,sBADH;AAENC,YAAAA,UAAU,EAAE;AAFN,WA3BF;AA+BNJ,UAAAA,QAAQ,EAAEA;AA/BJ;AALC,OALW;AA4CtBc,MAAAA,WAAW,EAAE;AA5CS,KAAxB;AA8CD,GAjDA,EAiDEf,KAjDF;AAkDF","sourcesContent":["'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n"]},"metadata":{},"sourceType":"script"}