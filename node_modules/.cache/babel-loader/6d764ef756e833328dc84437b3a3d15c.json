{"ast":null,"code":"'use strict';\n\nmodule.exports = oz;\noz.displayName = 'oz';\noz.aliases = [];\n\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword: /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [/\\b[a-z][A-Za-z\\d]*(?=\\()/, {\n      pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n      lookbehind: true\n    }],\n    number: /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=:)/,\n    operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  };\n}","map":{"version":3,"sources":["/Users/jianlan/Documents/GitHub/bayer-frontend/node_modules/refractor/lang/oz.js"],"names":["module","exports","oz","displayName","aliases","Prism","languages","comment","string","pattern","greedy","atom","alias","keyword","function","lookbehind","number","variable","operator","punctuation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,EAAjB;AACAA,EAAE,CAACC,WAAH,GAAiB,IAAjB;AACAD,EAAE,CAACE,OAAH,GAAa,EAAb;;AACA,SAASF,EAAT,CAAYG,KAAZ,EAAmB;AACjBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,EAAhB,GAAqB;AACnBK,IAAAA,OAAO,EAAE,sBADU;AAEnBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,wBADH;AAENC,MAAAA,MAAM,EAAE;AAFF,KAFW;AAMnBC,IAAAA,IAAI,EAAE;AACJF,MAAAA,OAAO,EAAE,wBADL;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJE,MAAAA,KAAK,EAAE;AAHH,KANa;AAWnBC,IAAAA,OAAO,EACL,+PAZiB;AAanBC,IAAAA,QAAQ,EAAE,CACR,0BADQ,EAER;AACEL,MAAAA,OAAO,EAAE,wBADX;AAEEM,MAAAA,UAAU,EAAE;AAFd,KAFQ,CAbS;AAoBnBC,IAAAA,MAAM,EACJ,0EArBiB;AAsBnBC,IAAAA,QAAQ,EAAE,sCAtBS;AAuBnB,iBAAa,YAvBM;AAwBnBC,IAAAA,QAAQ,EACN,8FAzBiB;AA0BnBC,IAAAA,WAAW,EAAE;AA1BM,GAArB;AA4BD","sourcesContent":["'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=:)/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n"]},"metadata":{},"sourceType":"script"}