{"ast":null,"code":"'use strict';\n\nmodule.exports = squirrel;\nsquirrel.displayName = 'squirrel';\nsquirrel.aliases = [];\n\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [Prism.languages.clike['comment'][0], {\n      pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    string: [{\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword: /\\b(?:base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield|__LINE__|__FILE__)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  });\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  });\n}","map":{"version":3,"sources":["/Users/jianlan/Documents/GitHub/bayer-frontend/node_modules/refractor/lang/squirrel.js"],"names":["module","exports","squirrel","displayName","aliases","Prism","languages","extend","comment","clike","pattern","lookbehind","greedy","string","inside","punctuation","keyword","number","operator","insertBefore","alias","lambda"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,QAAjB;AACAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AACAD,QAAQ,CAACE,OAAT,GAAmB,EAAnB;;AACA,SAASF,QAAT,CAAkBG,KAAlB,EAAyB;AACvBA,EAAAA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,GAA2BG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACzDC,IAAAA,OAAO,EAAE,CACPH,KAAK,CAACC,SAAN,CAAgBG,KAAhB,CAAsB,SAAtB,EAAiC,CAAjC,CADO,EAEP;AACEC,MAAAA,OAAO,EAAE,wBADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KAFO,CADgD;AASzDC,IAAAA,MAAM,EAAE,CACN;AACEH,MAAAA,OAAO,EAAE,4DADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KADM,EAMN;AACEF,MAAAA,OAAO,EAAE,4DADX;AAEEC,MAAAA,UAAU,EAAE,IAFd;AAGEC,MAAAA,MAAM,EAAE;AAHV,KANM,CATiD;AAqBzD,kBAAc;AACZF,MAAAA,OAAO,EAAE,uDADG;AAEZC,MAAAA,UAAU,EAAE,IAFA;AAGZG,MAAAA,MAAM,EAAE;AACNC,QAAAA,WAAW,EAAE;AADP;AAHI,KArB2C;AA4BzDC,IAAAA,OAAO,EACL,wOA7BuD;AA8BzDC,IAAAA,MAAM,EAAE,uDA9BiD;AA+BzDC,IAAAA,QAAQ,EAAE,yDA/B+C;AAgCzDH,IAAAA,WAAW,EAAE;AAhC4C,GAAhC,CAA3B;AAkCAV,EAAAA,KAAK,CAACC,SAAN,CAAgBa,YAAhB,CAA6B,UAA7B,EAAyC,UAAzC,EAAqD;AACnD,6BAAyB;AACvBT,MAAAA,OAAO,EAAE,SADc;AAEvBU,MAAAA,KAAK,EAAE;AAFgB,KAD0B;AAKnDC,IAAAA,MAAM,EAAE;AACNX,MAAAA,OAAO,EAAE,SADH;AAENU,MAAAA,KAAK,EAAE;AAFD;AAL2C,GAArD;AAUD","sourcesContent":["'use strict'\n\nmodule.exports = squirrel\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield|__LINE__|__FILE__)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"script"}